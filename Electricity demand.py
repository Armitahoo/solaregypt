import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Read the original CSV data
original_csv_path = "C:/Users/user/OneDrive/Documents/Advanced Willy/Final Data/Presentation/solaregypt/per-capita-electricity-source-stacked.csv"
data = pd.read_csv(original_csv_path)

# Filter the data for Egypt from 2000 to 2021
egypt_2000_2021 = data[(data['Entity'] == 'Egypt') & (data['Year'].between(2000, 2021))]

# Save the filtered data to a new CSV file
egypt_2000_2021.to_csv("Egypt 2000-2021", index=False)

# Read the filtered CSV data
egypt_data = pd.read_csv("Egypt 2000-2021")

# Set the seaborn style to make the chart visually appealing
sns.set(style='whitegrid')

# Define a mapping of column names to simpler, more precise labels
label_mapping = {
    'Coal electricity per capita - kWh (adapted for visualization of chart per-capita-electricity-source-stacked)': 'Coal',
    'Gas electricity per capita - kWh (adapted for visualization of chart per-capita-electricity-source-stacked)': 'Gas',
    'Oil electricity per capita - kWh (adapted for visualization of chart per-capita-electricity-source-stacked)': 'Oil',
    'Nuclear electricity per capita - kWh (adapted for visualization of chart per-capita-electricity-source-stacked)': 'Nuclear',
    'Hydro electricity per capita - kWh (adapted for visualization of chart per-capita-electricity-source-stacked)': 'Hydro',
    'Wind electricity per capita - kWh (adapted for visualization of chart per-capita-electricity-source-stacked)': 'Wind',
    'Solar electricity per capita - kWh (adapted for visualization of chart per-capita-electricity-source-stacked)': 'Solar',
    'Bioenergy electricity per capita - kWh (adapted for visualization of chart per-capita-electricity-source-stacked)': 'Bioenergy',
    'Other renewable electricity excluding bioenergy per capita - kWh (adapted for visualization of chart per-capita-electricity-source-stacked)': 'Other Renewable'
}

# Plot the line chart
plt.figure(figsize=(12, 8), dpi=300)

# Plot a line for each electricity source with user-friendly labels
for original_col, label in label_mapping.items():
    plt.plot(egypt_data['Year'], egypt_data[original_col], label=label)

# Customize the chart with labels, title, and legend
plt.xlabel('Year')
plt.ylabel('Electricity Usage per Capita (kWh)')
plt.title('Electricity Usage per Capita in Egypt (2000-2021)')
plt.legend(loc='upper left', bbox_to_anchor=(1, 1), title='Electricity Source')  # Add a title to the legend
sns.despine()  # Remove the top and right spines for a clean look

# Display the chart
plt.show()

# Compute the total energy generation for Egypt in 2021
egypt_2021 = egypt_2000_2021[egypt_2000_2021['Year'] == 2021]

# Get the list of energy columns to sum
energy_columns = list(label_mapping.keys())  # Columns representing different energy sources

# Sum across all these energy columns
total_energy_2021 = egypt_2021[energy_columns].sum().sum()

print("\nTotal electricity per capita generated by Egypt in 2021:", round(total_energy_2021, 2), "kWh")

electricity_price: float = 0.03

ave_cost = (total_energy_2021*electricity_price)

rounded_ave = round(ave_cost, 2)

print("\nThe Average Cost of Electricity Per Capita (USD/kWh):", rounded_ave)

Externality = 1000

ave_cost_ex = rounded_ave + Externality

print("\n The Average Cost plus the cost related to unhealthy externalities of Air Pollution per capita:", ave_cost_ex)

